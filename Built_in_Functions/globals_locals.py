"""globals()"""
# Вернуть словарь, реализующий текущее пространство имен модуля. Для кода
# внутри функций это устанавливается при определении функции и остается неизменным
# независимо от того, где функция вызывается.
# Это всегда словарь области видимости переменных текущего модуля, а не функции
# или метода из которого он вызывается.
print("---0-----Получить имя файла скрипта:----------------------")
x = globals()
print(x['__file__'])  # Вывод  '/home/script/globals.py'
print(type(x))
print("globals(): ", x)
print("---1 ---oпределим глобальную переменную xyz---------------")
xyz = 0
print("globals()['xyz'] = ", globals()['xyz'])
print("----2----изменим глобальную переменную--------------------")


def func():
    globals()['xyz'] = 5


func()

print("globals()['xyz'] = ", globals()['xyz'])
print('xyz =      ', xyz)

print("--------Как locals() работает в Python?-----------------")
"""locals()"""
# Обновить и вернуть словарь, представляющий текущую локальную таблицу символов. Свободные
# переменные возвращаются функцией locals(), когда она вызывается в функциональных блоках,
# но не в блоках классов. Обратите внимание, что на уровне модуля locals() и globals() —
# это один и тот же словарь.
#      Примечание
# Содержимое этого словаря не должно изменяться; изменения не могут повлиять на значения
# локальных и свободных переменных, используемых интерпретатором.

print(locals())
print("------Пример как locals() работает внутри локальной области?----")


def localsNotPresent():
    return locals()


def localsPresent():
    present = True
    return locals()


print('localsNotPresent:', localsNotPresent())
print('localsPresent:', localsPresent())

print("-----Обновление значений словаря-------------------------------")


def localsPresent_1():
    present = True
    print("localsPresent:               ", present)
    locals()['present'] = False
    print("locals()['present'] = False: ", present)


localsPresent_1()
# В отличие от словаря globals(), который отражает изменение фактической глобальной таблицы,
# словарь locals() не может изменять информацию внутри таблицы locals.

