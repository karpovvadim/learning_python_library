"""os.add_dll_directory(path)"""
# Добавьте путь к пути поиска DLL.
# Этот путь поиска используется при разрешении зависимостей для импортированных модулей
# расширения (сам модуль разрешается через sys.path), а также по ctypes.
# Удалите каталог, вызвав close() для возвращенного объекта или используя его в
# операторе with.
# Дополнительные сведения о загрузке библиотек DLL см. в документации Microsoft.
# Вызывает событие аудита os.add_dll_directory с путем аргумента.
#      Доступность: Windows.
#      Новое в версии 3.8: Предыдущие версии CPython разрешали библиотеки DLL,
#      используя поведение по умолчанию для текущего процесса. Это приводило к
#      несоответствиям, таким как только иногда поиск PATH или текущего рабочего каталога,
#      а функции ОС, такие как AddDllDirectory, не имели никакого эффекта.
#      В версии 3.8 два основных способа загрузки библиотек DLL теперь явно
#      переопределяют поведение всего процесса для обеспечения согласованности.
#      См. примечания по переносу для получения информации об обновлении библиотек.

import os
cuda_path = '/'
if cuda_path is None:
    raise RuntimeError('CUDA path could not be detected.')  # Путь CUDA не может быть обнаружен.
v = os.add_dll_directory(os.path.join(cuda_path, 'bin'))
print(v)
