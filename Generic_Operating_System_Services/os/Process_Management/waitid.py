"""os.waitid(idtype, id, options, /)"""
#      Дождитесь завершения дочернего процесса.
#      idtype может быть P_PID, P_PGID, P_ALL или (в Linux) P_PIDFD. От этого зависит
# интерпретация id; см. их отдельные описания.
#      options представляет собой комбинацию флагов по ИЛИ. Требуется хотя бы одно из
# значений WEXITED, WSTOPPED или WCONTINUED; WNOHANG и WNOWAIT — дополнительные
# необязательные флаги.
#      Возвращаемое значение — это объект, представляющий данные, содержащиеся в
# структуре siginfo_t, со следующими атрибутами:
#          si_pid (идентификатор процесса)
#          si_uid (реальный ID пользователя дочернего элемента)
#          si_signo (всегда SIGCHLD)
#          si_status (статус выхода или номер сигнала, в зависимости от si_code)
#          si_code (см. CLD_EXITED для возможных значений)
#      Если указан WNOHANG и в запрошенном состоянии нет соответствующих дочерних
# элементов, возвращается None. В противном случае, если нет подходящих дочерних
# элементов, которых можно было бы ожидать, возникает ChildProcessError.
#      Доступность: Unix, не Emscripten, не WASI.
#      Новое в версии 3.3.
import os
pid = os.fork()
if pid:
    idtype = os.P_PID  # дождаться дочернего элемента, чей PID равен id.
    print("idtype =", idtype)
    id = pid
    print("id =", id)
    option = os.WEXITED  # Specify option (Укажите вариант)
    print("option =", option)
    status = os.waitid(idtype, id, option)
    print('++++++++++++++++++++++++++++++++++')
    print("Status of child process:", status)
else:
    print("In Child process-")
    print("Process ID:", os.getpid())
    print("Hello World!")
    print("Exiting..")

"""
os.P_PID
os.P_PGID¶
os.P_ALL
os.P_PIDFD
"""
# Это возможные значения для idtype в waitid(). Они влияют на интерпретацию id:
#     P_PID — дождаться дочернего элемента, чей PID равен id.
#     P_PGID — ждать любого дочернего элемента, чей идентификатор группы прогресса равен id.
#     P_ALL — ждать любого потомка; идентификатор игнорируется.
#     P_PIDFD — дождаться дочернего элемента, идентифицированного идентификатором
#     дескриптора файла (дескриптор файла процесса, созданный с помощью pidfd_open()).
#     Доступность: Unix, не Emscripten, не WASI.
#     Примечание:  P_PIDFD доступен только в Linux >= 5.4.
#     Новое в версии 3.3.
#     Новое в версии 3.9: константа P_PIDFD.

"""os.WEXITED"""
# Этот флаг опций для waitid() приводит к тому, что дочерние процессы будут
# сообщены о завершении.
# Другие wait* функции всегда сообщают о завершившихся дочерних процессах, поэтому
# эта опция для них недоступна.
#      Доступность: Unix, не Emscripten, не WASI.
#      Новое в версии 3.3.

""" os.WSTOPPED"""
# Этот флаг опций для waitid() вызывает сообщение о дочерних процессах, которые были
# остановлены доставкой сигнала.
#      Эта опция недоступна для других wait* функций (ожидания).
#      Доступность: Unix, не Emscripten, не WASI.
#      Новое в версии 3.3.

"""os.WCONTINUED"""
# Этот флаг опций для waitpid(), wait3(), wait4() и waitid() вызывает сообщение о дочерних
# процессах, если они были продолжены с момента остановки управления заданиями с
# момента последнего сообщения о них.
#       Доступность: Unix, не Emscripten, не WASI.

"""os.WNOHANG"""
# Этот флаг параметров приводит к немедленному возврату функций waitpid(), wait3(),
# wait4() и waitid(), если статус дочернего процесса недоступен.
#       Доступность: Unix, не Emscripten, не WASI.

"""os.WNOWAIT"""
# Этот флаг опций приводит к тому, что waitid() оставляет дочерний элемент в состоянии
# ожидания, так что более поздний вызов wait*() может быть использован для повторного
# получения информации о состоянии дочернего элемента.
#      Эта опция недоступна для других функций wait*().
#      Доступность: Unix, не Emscripten, не WASI.

"""
os.CLD_EXITED      ВЫХОД
os.CLD_KILLED      УБИТ
os.CLD_DUMPED      СВАЛЕН
os.CLD_TRAPPED     В ЛОВУШКЕ
os.CLD_STOPPED     ОСТАНОВЛЕНО
os.CLD_CONTINUED   ПРОДОЛЖЕНИЕ
"""
# Это возможные значения si_code в результате, возвращаемом функцией waitid().
#      Доступность: Unix, не Emscripten, не WASI.
#      Новое в версии 3.3.
#      Изменено в версии 3.9: Добавлены значения CLD_KILLED и CLD_STOPPED.
