
"""os.forkpty()"""
# Разветвите дочерний процесс, используя новый псевдотерминал в качестве управляющего
# терминалом дочернего процесса. Возвращает пару (pid, fd), (где pid равен 0 в дочернем ??!)
# pid - идентификатор нового дочернего процесса в родительском, а fd — файловый дескриптор
# главного конца псевдотерминала. Для более переносимого подхода используйте модуль pty.
# При возникновении ошибки возникает ошибка OSError.
#      Вызывает событие аудита os.forkpty без аргументов.
#      Изменено в версии 3.8: Вызов forkpty() в субинтерпретаторе больше
#      не поддерживается (возникает RuntimeError).
#      Доступность: Unix, не Emscripten, не WASI.
import os

result = []
pid_and_fd = os.forkpty()  # Создайте дочерний процесс, используя метод os.forkpty()
print("      pid_and_fd =", pid_and_fd)
result.append(pid_and_fd)
print(pid_and_fd)
