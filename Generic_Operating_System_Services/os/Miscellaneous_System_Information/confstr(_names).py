"""os.confstr(name)"""
#   Возвращает строковые значения конфигурации системы. name указывает значение конфигурации
# для извлечения; это может быть строка, которая является именем определенного системного
# значения; эти имена указаны в ряде стандартов (POSIX, Unix 95, Unix 98 и др.).
# Некоторые платформы также определяют дополнительные имена. Имена, известные операционной
# системе хоста, даны как ключи словаря confstr_names. Для переменных конфигурации,
# не включенных в это сопоставление, также допускается передача целого числа для name.
#   Если значение конфигурации, указанное в name, не определено, возвращается None.
#   Если name является строкой и неизвестно, возникает ValueError. Если значение для name
# не поддерживается хост-системой, даже если оно включено в confstr_names,
# вызывается OSError с errno.EINVAL в качестве номера ошибки.
#   Доступность: Unix.

""" os.confstr_names"""
# Имена сопоставления словаря, принятые confstr(), с целочисленными значениями,
# определенными для этих имён операционной системой хоста. Это можно использовать для
# определения набора имен, известных системе.
#      Доступность: Unix.

import os
# System Configuration variable (Переменная конфигурации системы)
name = "CS_GNU_LIBC_VERSION"
# Получите значение конфигурации, соответствующее указанной переменной конфигурации,
# используя метод os.confstr().
value = os.confstr(name)
print("% s :" % name, value)

name = "CS_PATH"
# Получите значение конфигурации, соответствующее указанной переменной конфигурации,
# используя метод os.confstr().
value = os.confstr(name)
print("% s :" % name, value)

# Мы также можем передать целочисленное значение для параметра имени.
conf_var = "CS_GNU_LIBC_VERSION"
name = os.confstr_names[conf_var]
print("\nInteger value corresponding to % s:" % conf_var, name)

value = os.confstr(name)
print("Configuration value corresponding to % s :" % name, value)

print("\nИмена, известные операционной системе, принятые confstr(), \
с целочисленными значениями")
for item in os.confstr_names.items():
    print(item)

