"""os.pwritev(fd, buffers, offset, flags=0)"""
# Запишите содержимое буферов в файловый дескриптор fd со смещением смещения, оставив
# смещение файла неизменным. буферы должны быть последовательностью объектов, подобных
# байтам. Буферы обрабатываются в порядке массива. Все содержимое первого буфера
# записывается перед переходом ко второму и так далее.
# Аргумент flags содержит побитовое ИЛИ нуля или более из следующих флагов:
"""
    RWF_DSYNC
    RWF_SYNC
    RWF_APPEND
"""
# Возвращает общее количество фактически записанных байтов.
# Операционная система может установить ограничение (значение sysconf() 'SC_IOV_MAX')
# на количество используемых буферов.
# Объедините функциональность os.writev() и os.pwrite().
# Доступность: Linux >= 2.6.30, FreeBSD >= 6.0, OpenBSD >= 2.7, AIX >= 7.1.
# Для использования флагов требуется Linux >= 4.6.
# Новое в версии 3.7.

"""os.RWF_DSYNC"""
# Предоставьте эквивалент флага O_DSYNC os.open() для каждой записи. Этот эффект флага
# применяется только к диапазону данных, записанному системным вызовом.
#      Доступность: Linux >= 4.7.
#      Новое в версии 3.7.

"""os.RWF_SYNC"""
# Предоставьте эквивалент флага O_SYNC os.open() для каждой записи. Этот эффект флага
# применяется только к диапазону данных, записанному системным вызовом.
#      Доступность: Linux >= 4.7.
#      Новое в версии 3.7.

"""os.RWF_APPEND"""
# Предоставьте для каждой записи эквивалент флага O_APPEND os.open(). Этот флаг имеет
# смысл только для os.pwritev(), и его действие распространяется только на диапазон
# данных, записанный системным вызовом. Аргумент смещения не влияет на операцию записи;
# данные всегда добавляются в конец файла. Однако, если аргумент смещения равен -1,
# текущее смещение файла обновляется.
#     Доступность: Linux >= 4.16.
#     Новое в версии 3.10.
