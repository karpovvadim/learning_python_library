Linux extended attributes  -  Расширенные атрибуты Linux

Все эти функции доступны только в Linux.
New in version 3.3.

"""os.getxattr(path, attribute, *, follow_symlinks=True)"""

Возвращает значение расширенного атрибута файловой системы для пути. атрибут может быть
bytes или str (напрямую или косвенно через интерфейс PathLike). Если это str, он
кодируется с помощью кодировки файловой системы.
Эта функция может поддерживать указание дескриптора файла, а не переход по символическим ссылкам.
     Вызывает событие аудита os.getxattr с аргументами путь, атрибут.
     Изменено в версии 3.6: принимает объект, подобный пути, для пути и атрибута.

"""os.listxattr(path=None, *, follow_symlinks=True)"""

Возвращает список расширенных атрибутов файловой системы по пути. Атрибуты в списке
представлены в виде строк, декодированных с помощью кодировки файловой системы.
Если путь равен None, listxattr() проверит текущий каталог.
Эта функция может поддерживать указание дескриптора файла, а не переход по символическим ссылкам.
     Вызывает событие аудита os.listxattr с путем аргумента.
     Изменено в версии 3.6: принимает объект, подобный пути.

"""os.removexattr(path, attribute, *, follow_symlinks=True)"""

Удаляет расширенный атрибут атрибута файловой системы из пути. атрибут должен быть bytes
или str (напрямую или косвенно через интерфейс PathLike). Если это строка, она
кодируется с помощью кодировки файловой системы и обработчика ошибок.
Эта функция может поддерживать указание дескриптора файла, а не переход по символическим ссылкам.
     Вызывает событие аудита os.removexattr с аргументами путь, атрибут.
     Изменено в версии 3.6: принимает объект, подобный пути, для пути и атрибута.

""" os.setxattr(path, attribute, value, flags=0, *, follow_symlinks=True)"""

Установите атрибут расширенного атрибута файловой системы на пути к значению. атрибут
должен быть bytes или str без встроенных NUL (напрямую или косвенно через интерфейс
PathLike). Если это строка, она кодируется с помощью кодировки файловой системы и
обработчика ошибок. флаги могут быть XATTR_REPLACE или XATTR_CREATE. Если задан
XATTR_REPLACE, а атрибут не существует, ENODATA будет поднят. Если задано значение
XATTR_CREATE, а атрибут уже существует, атрибут не будет создан, и будет поднято
значение EEXISTS.
Эта функция может поддерживать указание дескриптора файла, а не переход по символическим ссылкам.
     Примечание
Ошибка в версиях ядра Linux ниже 2.6.39 приводила к игнорированию аргумента flags в
некоторых файловых системах.
     Вызывает событие аудита os.setxattr с аргументами путь, атрибут, значение, флаги.
     Изменено в версии 3.6: принимает объект, подобный пути, для пути и атрибута.

""" os.XATTR_SIZE_MAX"""

Максимальный размер, которым может быть значение расширенного атрибута.
В настоящее время это 64 KiB в Linux.

""" os.XATTR_CREATE"""

Это возможное значение аргумента flags в setxattr(). Это указывает на то, что операция
должна создать атрибут.

"""os.XATTR_REPLACE"""

Это возможное значение аргумента flags в setxattr(). Указывает, что операция должна
заменить существующий атрибут.