"""os.rmdir(path, *, dir_fd=None)"""
Удалить (удалить) путь к каталогу. Если каталог не существует или не пуст, возникает
FileNotFoundError или OSError соответственно. Чтобы удалить целые деревья каталогов,
можно использовать Shutil.rmtree().
Эта функция может поддерживать пути относительно дескрипторов каталогов.
   Вызывает событие аудита os.rmdir с аргументами path, dir_fd.
   Новое в версии 3.3: Параметр dir_fd.
Изменено в версии 3.6: принимает объект  path-like object (подобный пути)

"""os.unlink(path, *, dir_fd=None)"""
Удалить (удалить) путь к файлу. Эта функция семантически идентична remove();
имя разъединения - это его традиционное имя Unix

"""os.remove(path, *, dir_fd=None)"""
Удалить (удалить) путь к файлу. Если путь является каталогом, возникает ошибка OSError.
Используйте rmdir() для удаления каталогов. Если файл не существует, возникает
FileNotFoundError.
Эта функция может поддерживать пути относительно дескрипторов каталогов.
В Windows попытка удалить файл, который используется, приводит к возникновению исключения;
в Unix запись каталога удаляется, но хранилище, выделенное для файла, не становится
доступным до тех пор, пока исходный файл больше не используется.
   Вызывает событие аудита os.rmdir с аргументами path, dir_fd.
   Новое в версии 3.3: Параметр dir_fd.
Изменено в версии 3.6: принимает объект  path-like object (подобный пути)

Примеры смотреть в replace.py, rename.py:
    os.replace(src, dst, *, src_dir_fd=None, dst_dir_fd=None)
    os.rename(src, dst, *, src_dir_fd=None, dst_dir_fd=None)
