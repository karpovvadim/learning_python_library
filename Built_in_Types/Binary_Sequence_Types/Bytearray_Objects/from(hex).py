"""classmethod fromhex(string)"""
# Метод класса bytearray возвращает объект байтового массива, декодируя заданный строковый
# объект. Строка должна содержать две шестнадцатеричные цифры на байт, при этом пробелы
# ASCII игнорируются.

print("---------fromhex(string)---------------------------------")
print(bytearray.fromhex('2Ef0 F1f2  '))

# Изменено в версии 3.7: bytearray.fromhex() теперь пропускает все пробелы ASCII в строке,
# а не только пробелы.

# Функция обратного преобразования существует для преобразования объекта байтового массива
# в его шестнадцатеричное представление.

""" hex([sep[, bytes_per_sep]])"""
# Возвращает строковый объект, содержащий две шестнадцатеричные цифры для каждого байта
# в экземпляре.

print("\n---------hex()------------------------------------------")
print(bytearray(b'\xf0\xf1\xf2').hex())  # 'f0f1f2'

print("\n---------hex([sep]))-------------------------------------")

print(bytearray(b'\xf0\xf1\xf2').hex('-'))  # 'f0-f1-f2'

print("\n---------hex([sep[, bytes_per_sep]]))--------------------")

print(bytearray(b'\xf0\xf1\xf2').hex('_', 2))  # 'f0_f1f2'

print(bytearray(b'UUDDLRLRab').hex(' ', -4))

# Добавлено в версии 3.5.

# Изменено в версии 3.8: Подобно bytes.hex(), bytearray.hex() теперь поддерживает
# необязательные параметры sep и bytes_per_sep для вставки разделителей между байтами в
# шестнадцатеричном выводе.
